//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TheVoid.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TheVoid.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;html&gt;
        ///   &lt;head&gt;
        ///      &lt;title&gt;TheVoid&lt;/title&gt;
        ///      &lt;style&gt;
        ///         body {
        ///         background-color: #357;
        ///         font-family: &quot;Courier New&quot;, Courier, &quot;Lucida Sans Typewriter&quot;, &quot;Lucida Typewriter&quot;, monospace;
        ///         font-size: 10px;
        ///         font-style: normal;
        ///         font-variant: normal;
        ///         color: #111;
        ///         }
        ///         h1 {
        ///         letter-spacing: -3px;
        ///         text-align: center;
        ///         text-transform: lowercase;
        ///         font-size: 40px;
        ///         }
        ///         h1 spa [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string index {
            get {
                return ResourceManager.GetString("index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to function dotted_put(str,val) {
        ///    var oper=str.split(&quot;.&quot;);
        ///    var p=this;
        ///    for (var i=0;i&lt;oper.length-1;i++) {
        ///        var x=oper[i];
        ///        p[x]=p[x]||{};
        ///        p=p[x];
        ///    }
        ///    p[oper.pop()]=val;
        ///}
        ///
        ///function apcnote_old(pnumber, channel, note) {
        ///
        ///    page = JSON.parse(apcpageraw(pnumber));
        ///    if (!page.Mute) {
        ///        if (page.Pattern.Steps[tick % page.Pattern.Length]) {
        ///            noteout(note, page.Vel, channel, 250);
        ///        }
        ///    }
        ///}
        ///
        ///function apc(pnumber, channel,lengt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string InternalFunctions {
            get {
                return ResourceManager.GetString("InternalFunctions", resourceCulture);
            }
        }
    }
}
